{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello","text":"","tags":["tag1","tag2"]},{"location":"#sara-bohart","title":"Sara Bohart","text":"<p>I am a third year robotics engineering student at Arizona State University.</p>","tags":["tag1","tag2"]},{"location":"#stemteresting-team-301","title":"STEMteresting (Team 301)","text":"<p>This is a link to my team's GitHub.  STEMteresting GitHub Our project is a gravity simulating centrifuge, and I am responsible for controling the speed of the centrifuge.</p>","tags":["tag1","tag2"]},{"location":"API/","title":"API","text":"","tags":["tag1","tag2"]},{"location":"API/#standard-message-structure","title":"Standard Message structure","text":"Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 8 A Z Sender Initial Receiver Initial Data 1 Data 2 Y B <p>Note: Data 2 does not exist in some messages. A message containing one data point would look like this. </p> Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 Byte 7 A Z Sender Initial Receiver Initial Data 1 Y B The message handeling code is designed to notice the start sequence, AZ, and look at the subsequent characters until it notices that the string is too long, or it reaches the end sequence, YB. It will either pass, destroy, or filter that data based on if the receiver initial is B. Depending on the initials, the code will filter out data that contains invalid characters for that message. The initials for all of my team are shown bellow.  Member Initial Xander H Ella G Julia S Sara (me) B Our team decided to use our last initials so the X could be used for global massages, as per the project requierments.","tags":["tag1","tag2"]},{"location":"API/#messages","title":"Messages","text":"<p>The following tables show what data my system receives from or sends to each team member. </p>","tags":["tag1","tag2"]},{"location":"API/#from-xander","title":"From Xander","text":"Byte 5 Byte 6 Name ChangeDirection ChangeSpeed Type char char Min 0 1 Max 1 8 Example 1 5 Use From HMI to select a planet From Direct drive mode to set direction <p>An example of what this message could look like is AZHB03YB, which means that the motor will spin in the forward direction at the speed asociated with the moon. This would write the three logic pins (B1,B2,B3) to the sequence that represents the moon. This tells the SPI microcontroller to turn the motor on and off at the appropriate interval to generate the RPM needed to emulate the moon's gravity.</p> <p>While the final design of our system does not include functionality for the motor moving in reverse, this could be implemented in the future by adding another logic pin that turns on when the direction flips.</p>","tags":["tag1","tag2"]},{"location":"API/#to-ella","title":"To Ella","text":"Byte 5 Name ChangeSpeed Type char Min 1 Max 8 Example 5 Use To WiFi to communicate current RPM <p>An example of what this message would look like is AZBG7YB, which means the selected planet is Neptune and the motor is spinning at that speed.</p>","tags":["tag1","tag2"]},{"location":"API/#from-julia","title":"From Julia","text":"Byte 5 Name CheckDistance Type char Min 0 Max 1 Example 1 Use From sensor to check for safety <p>An example of what this message could look like is AZSB0YB, which would mean that it is not safe to opporate the motor. In this case, the logic pin for the motor spinning would be written low, keeping the motor still.</p>","tags":["tag1","tag2"]},{"location":"API/#code","title":"Code","text":"<p>The code for the message handeling can be found here.  This code identifies the start of the message by detecting an A followed by a Z. It then identifies the sender and receiver, checking if they are in the team and if they are me. If they are not in the team or I am the sender, the message is deleted. If not, the sender is identified and their data is stored in the associated variable.  The ChangeSpeed and CheckDistance variables write GPIO pins high or low to indicate their state. The CheckDistance variable is a simple on or off for a one or zero respectively. The ChangeSpeed Variable turn a pattern of three pins on and off to select the planet. These patterns are shown in the following table.</p> ChangeSpeed value Planet B1 B2 B3 1 Mercury On On On 2 Venus On Off Off 3 The Moon Off On Off 4 Mars Off Off On 5 Jupiter On On Off 6 Saturn Off On On 7 Neptune On Off On 8 Pluto Off Off Off <p>The code that reads that logic and modulated the motor speed can be found here. For debugging, turn on the redirect printf to UART option for EUSART1. This allows the program to print the error messages. These error messages cause lag when the system is plugged in to the whole project. For the best functionality, ensure that the redirect printf to UART option is NOT selected for EUSART1.</p>","tags":["tag1","tag2"]},{"location":"Resources/","title":"Resources","text":""},{"location":"Resources/#spi-code-with-logic-gate","title":"SPI code with Logic Gate","text":"<p>AdvancedSerialCom.zip</p>"},{"location":"Resources/#message-handeling-code-with-logic-gate","title":"Message Handeling code with Logic Gate","text":"<p>MessageTest2.zip</p>"},{"location":"Resources/#base-spi-code-for-the-motor-driver-in-mplabx","title":"Base SPI code for the motor driver in MPLabX","text":"<p>AdvancedSerialCom.zip</p>"},{"location":"Schematic/","title":"Schematic","text":"<p>This is the current schmatic of the Motor Driver System as of 2/23/2025. It includes the Switching regulator that will be used to filter the power supply to the motor down to the 3.3V required by the PIC Microchip. Then it displays the motor driver with the motor connected. The PIC is shown with net names that connect its pins to the appropriate pins on the other components. The three remaining boxes show header clusters which will be used to connect the system to other systems and to the MPLab debugger that we are using in class.</p>","tags":["tag1","tag2"]},{"location":"Schematic/#png","title":"PNG","text":"","tags":["tag1","tag2"]},{"location":"Schematic/#pdf","title":"PDF","text":"<p>MDv1.7.pdf</p>","tags":["tag1","tag2"]},{"location":"Schematic/#zip","title":"Zip","text":"<p>MDv1.7.zip</p>","tags":["tag1","tag2"]},{"location":"blockdiagram/","title":"Block Diagram","text":"<p>This block diagram is for the actuator subsystem. It will use a digital motor driver to change the speed of the motor based on data from the distance sensor.</p>","tags":["tag1","tag2"]},{"location":"blockdiagram/#individual-block-diagram","title":"Individual Block Diagram","text":"<p> Updated 5/1/25</p>","tags":["tag1","tag2"]},{"location":"blockdiagram/#the-plan","title":"The Plan","text":"<p>The project that this system is designed for is emulating the gravity of different planets using a centrifuge. I am in charge of the motor, which needs to get information from the distance sensor and the HMI to know if it is safe to spin and how fast to spin the motor to emulate the selected gravity.  All of the message handeling and SPI code cannot run on one microcontroller, so a second one was added. They each are powered by their own voltage regulator, and communicate over a logic gate to control the motor speed. B0 sets the motor on or off based on sensor input and B1-3 select the planet. </p> Setting B0 B1 B2 B3 Off for safety low either either either Mercury either high high high Venus either high low low Moon either low high low Mars either low low high Jupiter either high high low Saturn either low high high Neptune either high low high Pluto either low low low <p> This then trigers the SPI to switch on and off, creating a PWM signal to modulate the speed of the motor. The motor will only spin when B0 is written high.  For the purposes of demonstration, the logic gate will be displayed using LEDs on a breadboard. In the official project, the wires will jump directly between the PICs.</p>","tags":["tag1","tag2"]},{"location":"bom/","title":"Bill of Materials","text":"","tags":["tag1","tag2"]},{"location":"bom/#bill-of-materials","title":"Bill of Materials","text":"<p> This document details every component that is expected to be used in the final design of my motor systen. It includes a lot of est points because every trace was set to have a test point.  This is the .xlxs fole of the BOM that can be accessed for easier viewing: BOMv1.4.xlsx</p>","tags":["tag1","tag2"]},{"location":"componentselection/","title":"Component Selection","text":"","tags":["tag1","tag2"]},{"location":"componentselection/#motor","title":"Motor","text":"","tags":["tag1","tag2"]},{"location":"componentselection/#requirements","title":"Requirements","text":"<p>The motor must be able to create an RCF that emulates the gravity of Jupiter (25.92 m/s^2 or 2.640 times the earth\u2019s gravity according to NASA). The Innovation Hub has 3D printers with build areas of 25x21x21 cm, so the projected radius of the centrifuge as of 2/7/25 is 10.5 cm. That means the motor must achieve a loaded speed of 150 RPM. The required torque is estimated to be 4.97 mNm. This changes depending on the shape of the centrifuge the team decides to use. This number assumes a 1 cm thick, solid, PLA disk.</p>","tags":["tag1","tag2"]},{"location":"componentselection/#options","title":"Options","text":"Option 1 Pros Cons  381-3642-ND  GEARMOTOR 150 RPM 24V PLANETARY  Individual Cost: $475.38  DigiKey RPM - This motor is rated for 150 RPM which is the fastest we will need the motor to go.  Torque - The torque rating of 7050 mNm is more than enough to spin the centrifuge. Expensive - The budget is \\(60 per team member (\\)240 for the whole team) and I am not able to pay for this out of pocket.  Lead Time - The Manufacturer Standard Lead Time is listed as 16 weeks, which is too long for the project to wait. Option 2 Pros Cons 942-PAN14EE12MD-ND  STANDARD MTR DC BRUSH 300MM LEAD  Individual Cost: $4.75  DigiKey Wire Leads - These will make it easier to connect the motor to the system than if the motor came with an encoder and all the terminals that come with that.  Torque - The torque rating is 4.9 mNm, which should be enough if the centrifuge is made of PLA. Gear Train Needed - This motor is rated for 12800 RPM, so a significant gear reduction will be needed to get to the preferred speed. These gears would need to be sourced or 3D printed because the motor does not come with them.  Voltage - It needs 12V which is much higher than the 3.3 that the microcontroller uses. Option 3 Pros Cons  PAN14EE12AA1  STANDARD MOTOR 12850 RPM 12V  Individual Cost: $5.22  DigiKey Torque - The data sheet indicates that this motor can work with 4.9 mNm, which should be enough for our centrifuge.  Cost - This motor is very cost effective as it only costs $5.22. Gear Train Needed - This motor is rated for 12850 RPM, so a gear reduction will be needed. These gears would need to be sourced or 3D printed because the motor does not come with them.  Voltage - This motor also takes 12V, which will require a second power source. Option 4 Pros Cons  25SG-370CA 6V 25D Metal Gearmotor, 280rpm Individual Cost: $6.58  RoboShop Cost - For a gear motor this is not very expencive.  Comes with mounting - There is an aluminum mount for the shaft and mounting holes to attach the motor to the project. New Vendor - This motor would require another order form because it is not from digikey  Lack of datasheet - The only specs given are on the vendor's cite Shipping fee - The shipping fee is estimated to be at least $16.50","tags":["tag1","tag2"]},{"location":"componentselection/#selection","title":"Selection","text":"<p>Option 4  The best choice for this project is the 6V 25D Metal Gearmotor because it has a high torque and a low speed. The motor only needs to run at 150 RPM, and this motor has a max rated speed of 280 RPM. It is also cost effective despite the shipping fee. Note: While this was the selected motor, it never arrived in the mail, so our team is using another 12V DC motor that was found in a bag of extra motors.</p>","tags":["tag1","tag2"]},{"location":"componentselection/#switching-power-supply","title":"Switching Power Supply","text":"","tags":["tag1","tag2"]},{"location":"componentselection/#requierments","title":"Requierments","text":"<p>The switching voltage regulator must output 3.3 V from a 12 V source. </p>","tags":["tag1","tag2"]},{"location":"componentselection/#options_1","title":"Options","text":"Option 1 Pros Cons  LM2655MTCX-3.3  IC REG BUCK 3.3V 2.5A 16TSSOP  Individual Cost: $1.19  DigikKey Rated for 12 V - This chip can operate between 4 and 14 V, which is in range of what the motor requires  Fixed 3.3 V Output - The chip has a fixed output of 3.3, meaning no matter what, the microcontroller will receive 3.3 V. Shipping Fee - The shipping fee for this chip is $8 because it is a marketplace product.  Only one output - There is only one output, so all 3.3 V power will be drawn from the single pin. Option 2 Pros Cons  LM2655MTC-3.3/NOPB  IC REG BUCK 3.3V 2.5A 16TSSOP  Individual Cost: $4.66  DigiKey Texas Instruments - This is a big name manufacturer that can be trusted.  No Shipping fee - There is no additional shipping fee.  Same Ratings - This part has the same ratings as option 1. Expensive - Despite having the same ratings as option 1, this chip is significantly more expensive.  Many pins - This chip has a lot of small pins that need to be soldered very carefully without overheating the chip. Option 3 Pros Cons  LM2651MTCX-3.3/NOPB  IC REG BUCK 3.3V 1.5A 16TSSOP  Individual Cost: $3.93  DigiKey Low Cost - It costs less than the previous Texas Instruments part  Datasheet - This chip comes with a datasheet. Less Power - THe previous options offered 2.5 A while this one only gets 1.5 A  Buying on scale - This chip is more expensive than option 1 when buying 4. Option 4 Pros Cons  LM2576-3.3WU  IC REG BUCK 3.3V 3A TO263-5  Individual Cost: $1.75  DigiKey Low Cost - only $1.75 each.Current Output - the output current is 3A which is enough for the components this is powering. Fixed output - This part can only do 3.3V out. Minimum Circuit - the minimum circuit includes an inductor and a diode, which I will need to find and buy","tags":["tag1","tag2"]},{"location":"componentselection/#selection_1","title":"Selection","text":"<p>Option 4  Option 4 is cost effective, simple, and overall the best option. I have also used a similar component before, so it will be familiar to work with. </p>","tags":["tag1","tag2"]},{"location":"componentselection/#motor-driver","title":"Motor Driver","text":"","tags":["tag1","tag2"]},{"location":"componentselection/#requierments_1","title":"Requierments","text":"<p>The motor driver must use eirthe SPI or I2C communication per the project requierments.</p>","tags":["tag1","tag2"]},{"location":"componentselection/#options_2","title":"Options","text":"Option 1 Pros Cons  IFX9201SGAUMA1  IC HALF BRIDGE DRIVER 6A 12DSO  Individual Cost: $3.68  DigiKey In Class Example - This is the chip that we use in class, so there are plenty of resources I can use for this device.  Supply Voltage Range - The chip requires 5-36 V, which includes 12 V, so no new regulator is needed. Supply Voltage Range - 3.3 V is too low for this cip, so It could not pull power from the voltage regulator.  Too many features - This chip has the capacity to be controlled by PWM, but the project requires that only I2C or SPI are used. Option 2 Pros Cons  NCV7703CD2R2G  IC HALF BRIDGE DRVR 1.1A 14SOIC  Individual Cost: $3.60  DigiKey Supply Voltage - The supply voltage range is 3.15 - 5.25 V, so this chip can operate on the 3.3 V regulator.  Only uses Serial Communication - There is no other option than what is required by the project. New chip - THis chip is not used in the class, so new bugs will be harder to address.  Lead Time - The Manufacturer Standard Lead TIme is 33 Weeks, so if DigiKey runs out of this part before we purchase it, the team will not be able to use this part. Option 3 Pros Cons  NCP51530BDR2G  Half Bridge (2) Driver General Purpose Power MOSFET 8-SOIC  Individual Cost: $2.23  DigiKey Cost - This is the least expensive of the researched motor drivers.  Supply Voltage - This chip can run on the 12 V rail. Very Short Datasheet - The datasheet is very short and does not have as much information as the other chips  Pin Names - Pin Names are different from those used in the class, so translating learning will be a step more difficult.","tags":["tag1","tag2"]},{"location":"componentselection/#selection_2","title":"Selection","text":"<p>Option 1  This is the best choice because it is the same one from the class, theirfore there are more resources readily avalible to me for debugging and troubleshooting.</p>","tags":["tag1","tag2"]},{"location":"componentselection/#microcontroler","title":"Microcontroler","text":"","tags":["tag1","tag2"]},{"location":"componentselection/#requierments_2","title":"Requierments","text":"<p>The microcontroler needs to support the selected motor driver and communicate through UART with the sensor and the OLED systems. To accomplish this, it will need one UART and one I2C subsystem. This will be a total of 4 pins 2 for I2C and 2 for UART RX and TX.</p>","tags":["tag1","tag2"]},{"location":"componentselection/#pic","title":"PIC","text":"ESP Info Answer Notes Model PIC18F47Q10-I/PT Product Page Microchip Datasheet PDF of the Datasheet Application Notes UART Serial EEPROMs It did not have application notes on I2C but it is the same family as the in-class PIC, so that should transfer over enough. Vendor Link DigiKey Can ship immedeately Code Examples All code examples from Microchip I2C Host write data External Resources I2C coding tutorial Got I2C Working! Implemetning I2C on PIC Unit cost $1.65 Absolute Maximum Current 350 mA It is the highest current any pin can take Supply Voltage Range -0.3 to +6.5 V To VDD pin Maximum GPIO Current per pin 50 mA Positive or negative Supports External Interrupts? Yes They are mentioned in the Datasheet section 15.8. Required Programming Hardware, Cost ESP32 No cost because one came with the class Works with MPLabX? Yes Works with Microchip Code Configurator? Yes","tags":["tag1","tag2"]},{"location":"componentselection/#pins","title":"Pins","text":"Module # Available Needed Associated Pins GPIO 35 0 All Pins UART 16 2 RB0-7, RC0-7 I2C 16 2 RB0-7, RC0-7 Reset 1 1 RE3 OSC 1 0 RA6","tags":["tag1","tag2"]},{"location":"componentselection/#my-role","title":"My Role","text":"<p>My role as a team member is to plan and lead meetings to ensure that we are staying on track as a group. My section of the project is the actuator system. I need to design something that takes information from the distance sensor, uses that information to pick a spin speed, drives a motor to spin at that speed, and communicate that speed with the OLED system. </p>","tags":["tag1","tag2"]},{"location":"componentselection/#test-project","title":"Test Project","text":"<p>This is a screenshot of my test project for this microcontroller. </p>","tags":["tag1","tag2"]},{"location":"componentselection/#selection_3","title":"Selection","text":"<p>As of 2/7/25, I am using the PIC18F47Q10. This microcontroller opperates with in the planned voltage, has enough pins for my design, and is used in the class, ensuring that I have many people I can turn to for advice. </p>","tags":["tag1","tag2"]},{"location":"powerbudget/","title":"Power Budget","text":"<p> By making this power budget, I was able to gage what power source I would need. It allowed me to estimate the necissary voltage and current to supply to my system.  This power budget assumes that the system will be powered using an outlet via an adapter such as this. Since the power source is an outlet and not a battery, the battery life is inefinite. It makes more sense for this project to be powered through a stationary wall outlet because it would be used in an enviornment like a museum, where the motor will not need to be transported often. This is a PDF of the Power Budget, which can be downloaded for easier viewing.</p>","tags":["tag1","tag2"]},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}